/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.PhieuPhatBUS;
import DTO.PhieuPhatDTO;
import Report.XuatDanhSachExcel;
import java.io.File;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

import java.io.IOException;

import org.apache.pdfbox.pdmodel.*;
import org.apache.pdfbox.pdmodel.font.PDType1Font;


/**
 *
 * @author quang
 */
public class PhieuPhatGUI extends javax.swing.JFrame {
    /**
     * Creates new form PhieuPhat
     */
    private PhieuPhatBUS bus=new PhieuPhatBUS();
    public PhieuPhatGUI() throws Exception{
        initComponents();
        update();
    }
    private DefaultTableModel model;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnXuatDanhSach = new javax.swing.JButton();
        btnXuatChitiet = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePhieuPhat = new javax.swing.JTable();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Danh Sách Phiếu Phạt");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnXuatDanhSach.setText("Xuất danh sách");
        btnXuatDanhSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatDanhSachActionPerformed(evt);
            }
        });

        btnXuatChitiet.setText("Xuất chi tiết");
        btnXuatChitiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatChitietActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXuatChitiet, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuatDanhSach))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(btnXuatDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(btnXuatChitiet, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablePhieuPhat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablePhieuPhat);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXuatChitietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatChitietActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXuatChitietActionPerformed

    private void btnXuatDanhSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatDanhSachActionPerformed
        try {
            // TODO add your handling code here:
            exportToExcel();
        } catch (Exception ex) {
            Logger.getLogger(PhieuPhatGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }//GEN-LAST:event_btnXuatDanhSachActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuPhatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuPhatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuPhatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuPhatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PhieuPhatGUI().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(PhieuPhatGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXuatChitiet;
    private javax.swing.JButton btnXuatDanhSach;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePhieuPhat;
    // End of variables declaration//GEN-END:variables
    private void update(){
        try {
            // TODO add your handling code here:
            if(bus.getList_PM()==null){
                bus.docDB();
            }
            Vector header =new Vector();
            header.add("Mã");
            header.add("Mã Sách");
            header.add("Mã Phiếu Mượn");
            header.add("Mã Vi Phạm");
            header.add("Ngày Vi Phạm");
            header.add("Số tiền Phạt");
            model = new DefaultTableModel(header,0);
            
            //thử hashmap
            
            //
            
            for (PhieuPhatDTO sv : bus.getList_PM()){
                Vector row =new Vector();
                row.add(sv.getMa());
                row.add(sv.getMaSach());
                row.add(sv.getMaPhieuMuon());
                row.add(sv.getMaViPham());
                row.add(sv.getNgayViPham());
                row.add(sv.getSoTienPhat());
                model.addRow(row);
                
            }
            tablePhieuPhat.setModel(model);
        } catch (Exception ex) {
            Logger.getLogger(PhieuPhatGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void exportToExcel() throws Exception {
        XuatDanhSachExcel xuat =new XuatDanhSachExcel();
        xuat.PhieuPhat();
//        // Tạo một workbook mới
//        Workbook workbook = new XSSFWorkbook();
//
//        // Tạo một trang trong workbook
//        Sheet sheet = workbook.createSheet("Danh sách phiếu Phạt");
//
//        // Tạo hàng tiêu đề
//        Row headerRow = sheet.createRow(0);
//        headerRow.createCell(0).setCellValue("Mã");
//        headerRow.createCell(1).setCellValue("Mã Sách");
//        headerRow.createCell(2).setCellValue("Mã Phiếu Mượn");
//        headerRow.createCell(3).setCellValue("Mã Vi Phạm");
//        headerRow.createCell(4).setCellValue("Ngày Vi Phạm");
//        headerRow.createCell(5).setCellValue("Số Tiền Phạt");
//        // Thêm các cột khác tùy theo dữ liệu của bạn
//
//        // Lặp qua danh sách phiếu mượn và thêm dữ liệu vào từng hàng
//        ArrayList <PhieuPhatDTO> danhSachPhieuPhat = bus.getList_PM();// Lấy danh sách phiếu mượn từ bus (thay thế bằng phương thức tương ứng của bạn)
//        int rowIndex = 1;
//        for (PhieuPhatDTO phieuPhat : danhSachPhieuPhat) {
//            Row row = sheet.createRow(rowIndex);
//            row.createCell(0).setCellValue(phieuPhat.getMa());
//            row.createCell(1).setCellValue(phieuPhat.getMaSach());
//            row.createCell(2).setCellValue(phieuPhat.getMaPhieuMuon());
//            row.createCell(3).setCellValue(phieuPhat.getMaViPham());
//            row.createCell(4).setCellValue(phieuPhat.getNgayViPham());
//            row.createCell(5).setCellValue(phieuPhat.getSoTienPhat());
//            // Thêm các cột khác tùy theo dữ liệu của bạn
//
//            rowIndex++;
//        }
//
//        // Lưu workbook vào một tệp Excel
//        try {
//            try (FileOutputStream fileOut = new FileOutputStream("./src/excel/DanhSachPhieuPhat.xlsx")) {
//                workbook.write(fileOut);
//                JOptionPane.showMessageDialog(null, "Xuất Thành Công", "Oke", JOptionPane.OK_OPTION);
//                File excelFile =new File("./src/excel/DanhSachPhieuPhat.xlsx");
//                if (excelFile.exists()) {
//                    Desktop.getDesktop().open(excelFile);
//                } else {
//                    System.out.println("Không tìm thấy file Excel.");
//                }
//                
//            }
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
    }
    private void exportToPDF() throws Exception{
        try {
            PDDocument document = new PDDocument();
            PDPage page = new PDPage();
            document.addPage(page);

            PDPageContentStream contentStream = new PDPageContentStream(document, page);
            contentStream.setFont(PDType1Font.TIMES_ROMAN, 12);

            float tableWidth = 500f;
            float tableMargin = 50f;
            float yStart = page.getMediaBox().getHeight() - tableMargin;
            float yPosition = yStart;
            float tableHeight = 20f;
            float cellMargin = 5f;
            float fontSize = 12f;
            float fontHeight = PDType1Font.TIMES_ROMAN.getFontDescriptor().getFontBoundingBox().getHeight() / 1000 * fontSize;

            String[] headers = { "Ma", "Ma Sach", "Ma Phieu Muon", "Ma Vi Pham", "Ngay Vi Pham", "So Tien Phat" };

            // Vẽ phần tiêu đề
            contentStream.beginText();
            contentStream.newLineAtOffset(tableMargin, yPosition);
            for (String header : headers) {
                contentStream.showText(header);
                contentStream.newLineAtOffset(tableWidth / headers.length, 0);
            }
            contentStream.endText();

            // Vẽ dòng kẻ ngang phân cách tiêu đề và dữ liệu
            contentStream.setLineWidth(1f);
            contentStream.moveTo(tableMargin, yPosition - fontHeight - 2 * cellMargin +15);
            contentStream.lineTo(tableMargin + tableWidth, yPosition - fontHeight - 2 * cellMargin +15);
            contentStream.stroke();

            // Vẽ dữ liệu từ danh sách phiếu mượn
            for (PhieuPhatDTO phieuPhat : bus.getList_PM()) {
                yPosition -= tableHeight;

                contentStream.beginText();
//                contentStream.setFont(PDType1Font.HELVETICA, 12);
                contentStream.newLineAtOffset(tableMargin, yPosition - cellMargin);
                contentStream.showText((String) Integer.toString(phieuPhat.getMa()));
                contentStream.newLineAtOffset(tableWidth / headers.length, 0);
                contentStream.showText(Integer.toString(phieuPhat.getMaSach()));
                contentStream.newLineAtOffset(tableWidth / headers.length, 0);
                contentStream.showText(Integer.toString(phieuPhat.getMaPhieuMuon()));
                contentStream.newLineAtOffset(tableWidth / headers.length, 0);
                contentStream.showText(Integer.toString(phieuPhat.getMaViPham()));
                contentStream.newLineAtOffset(tableWidth / headers.length, 0);
                contentStream.showText(phieuPhat.getNgayViPham());
                contentStream.newLineAtOffset(tableWidth / headers.length, 0);
                if(phieuPhat.getSoTienPhat()!=null)
                contentStream.showText(phieuPhat.getSoTienPhat());
                else contentStream.showText("");
                contentStream.endText();
            }
                contentStream.close();

            document.save(new File("./src/pdf/DanhSachPhieuPhat.pdf"));
            document.close();

            System.out.println("Xuất file PDF thành công.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
